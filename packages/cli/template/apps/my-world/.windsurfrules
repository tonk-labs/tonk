# DO NOT EDIT - AUTO-GENERATED FROM docs/src/llms/shared/instructions.md
# This file is automatically generated from the documentation.
# Edit the source file instead: docs/src/llms/shared/instructions.md
# DocVersion: e4a56ca (2025-08-11)

# How to use instruction files
The files in this directory include utils and helpers that would ordinarily be hidden within a Node module. For the sake of introspection by LLMs, they are surfaced here.

Each file has explicit and verbose TypeScript interfaces with comprehensive JSDoc documentation. Be sure to follow the provided structure, best practices, and implementation suggestions precisely. Do not hallucinate capabilities that are not explicitly defined in a given file.

Related utilities are grouped into descriptively named files and include an `index.ts` that explicitly exports everything with detailed type annotations.


---

# Project-Specific Instructions

# CLI Template My World App - Custom Instructions

## Project-Specific Guidelines

### Node Modules
- Use `npm` for package management
- Whenever an action requires an external Node module, always read the `package.json` first to check what modules you have at your disposal
- If a module you think you need does not exist in `package.json`, do not use arbitrary modules
    - Come up with an alternative strategy to implement the task.
    - If you think it is absolutely not possible, inform the user with a clear explanation that the task is outside the limits of your capabilities.

### Linting
- Put `_` ahead of parameters that aren't used in a function (e.x., `_req` in the following)
```tsx
router.get('/health', (_req, res) => {
  res.json({ status: 'ok' });
});
```

### Project Configuration
The tinyfoot.config.json file includes useful information about the project and the project purpose.